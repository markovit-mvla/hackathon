{"ast":null,"code":"(function (self) {\n  'use strict';\n\n  function fetchPonyfill(options) {\n    var Promise = options && options.Promise || self.Promise;\n    var XMLHttpRequest = options && options.XMLHttpRequest || self.XMLHttpRequest;\n    var global = self;\n    return function () {\n      var self = Object.create(global, {\n        fetch: {\n          value: undefined,\n          writable: true\n        }\n      });\n      (function (self) {\n        'use strict';\n\n        if (self.fetch) {\n          return;\n        }\n        var support = {\n          searchParams: 'URLSearchParams' in self,\n          iterable: 'Symbol' in self && 'iterator' in Symbol,\n          blob: 'FileReader' in self && 'Blob' in self && function () {\n            try {\n              new Blob();\n              return true;\n            } catch (e) {\n              return false;\n            }\n          }(),\n          formData: 'FormData' in self,\n          arrayBuffer: 'ArrayBuffer' in self\n        };\n        if (support.arrayBuffer) {\n          var viewClasses = ['[object Int8Array]', '[object Uint8Array]', '[object Uint8ClampedArray]', '[object Int16Array]', '[object Uint16Array]', '[object Int32Array]', '[object Uint32Array]', '[object Float32Array]', '[object Float64Array]'];\n          var isDataView = function (obj) {\n            return obj && DataView.prototype.isPrototypeOf(obj);\n          };\n          var isArrayBufferView = ArrayBuffer.isView || function (obj) {\n            return obj && viewClasses.indexOf(Object.prototype.toString.call(obj)) > -1;\n          };\n        }\n        function normalizeName(name) {\n          if (typeof name !== 'string') {\n            name = String(name);\n          }\n          if (/[^a-z0-9\\-#$%&'*+.\\^_`|~]/i.test(name)) {\n            throw new TypeError('Invalid character in header field name');\n          }\n          return name.toLowerCase();\n        }\n        function normalizeValue(value) {\n          if (typeof value !== 'string') {\n            value = String(value);\n          }\n          return value;\n        }\n\n        // Build a destructive iterator for the value list\n        function iteratorFor(items) {\n          var iterator = {\n            next: function () {\n              var value = items.shift();\n              return {\n                done: value === undefined,\n                value: value\n              };\n            }\n          };\n          if (support.iterable) {\n            iterator[Symbol.iterator] = function () {\n              return iterator;\n            };\n          }\n          return iterator;\n        }\n        function Headers(headers) {\n          this.map = {};\n          if (headers instanceof Headers) {\n            headers.forEach(function (value, name) {\n              this.append(name, value);\n            }, this);\n          } else if (Array.isArray(headers)) {\n            headers.forEach(function (header) {\n              this.append(header[0], header[1]);\n            }, this);\n          } else if (headers) {\n            Object.getOwnPropertyNames(headers).forEach(function (name) {\n              this.append(name, headers[name]);\n            }, this);\n          }\n        }\n        Headers.prototype.append = function (name, value) {\n          name = normalizeName(name);\n          value = normalizeValue(value);\n          var oldValue = this.map[name];\n          this.map[name] = oldValue ? oldValue + ',' + value : value;\n        };\n        Headers.prototype['delete'] = function (name) {\n          delete this.map[normalizeName(name)];\n        };\n        Headers.prototype.get = function (name) {\n          name = normalizeName(name);\n          return this.has(name) ? this.map[name] : null;\n        };\n        Headers.prototype.has = function (name) {\n          return this.map.hasOwnProperty(normalizeName(name));\n        };\n        Headers.prototype.set = function (name, value) {\n          this.map[normalizeName(name)] = normalizeValue(value);\n        };\n        Headers.prototype.forEach = function (callback, thisArg) {\n          for (var name in this.map) {\n            if (this.map.hasOwnProperty(name)) {\n              callback.call(thisArg, this.map[name], name, this);\n            }\n          }\n        };\n        Headers.prototype.keys = function () {\n          var items = [];\n          this.forEach(function (value, name) {\n            items.push(name);\n          });\n          return iteratorFor(items);\n        };\n        Headers.prototype.values = function () {\n          var items = [];\n          this.forEach(function (value) {\n            items.push(value);\n          });\n          return iteratorFor(items);\n        };\n        Headers.prototype.entries = function () {\n          var items = [];\n          this.forEach(function (value, name) {\n            items.push([name, value]);\n          });\n          return iteratorFor(items);\n        };\n        if (support.iterable) {\n          Headers.prototype[Symbol.iterator] = Headers.prototype.entries;\n        }\n        function consumed(body) {\n          if (body.bodyUsed) {\n            return Promise.reject(new TypeError('Already read'));\n          }\n          body.bodyUsed = true;\n        }\n        function fileReaderReady(reader) {\n          return new Promise(function (resolve, reject) {\n            reader.onload = function () {\n              resolve(reader.result);\n            };\n            reader.onerror = function () {\n              reject(reader.error);\n            };\n          });\n        }\n        function readBlobAsArrayBuffer(blob) {\n          var reader = new FileReader();\n          var promise = fileReaderReady(reader);\n          reader.readAsArrayBuffer(blob);\n          return promise;\n        }\n        function readBlobAsText(blob) {\n          var reader = new FileReader();\n          var promise = fileReaderReady(reader);\n          reader.readAsText(blob);\n          return promise;\n        }\n        function readArrayBufferAsText(buf) {\n          var view = new Uint8Array(buf);\n          var chars = new Array(view.length);\n          for (var i = 0; i < view.length; i++) {\n            chars[i] = String.fromCharCode(view[i]);\n          }\n          return chars.join('');\n        }\n        function bufferClone(buf) {\n          if (buf.slice) {\n            return buf.slice(0);\n          } else {\n            var view = new Uint8Array(buf.byteLength);\n            view.set(new Uint8Array(buf));\n            return view.buffer;\n          }\n        }\n        function Body() {\n          this.bodyUsed = false;\n          this._initBody = function (body) {\n            this._bodyInit = body;\n            if (!body) {\n              this._bodyText = '';\n            } else if (typeof body === 'string') {\n              this._bodyText = body;\n            } else if (support.blob && Blob.prototype.isPrototypeOf(body)) {\n              this._bodyBlob = body;\n            } else if (support.formData && FormData.prototype.isPrototypeOf(body)) {\n              this._bodyFormData = body;\n            } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n              this._bodyText = body.toString();\n            } else if (support.arrayBuffer && support.blob && isDataView(body)) {\n              this._bodyArrayBuffer = bufferClone(body.buffer);\n              // IE 10-11 can't handle a DataView body.\n              this._bodyInit = new Blob([this._bodyArrayBuffer]);\n            } else if (support.arrayBuffer && (ArrayBuffer.prototype.isPrototypeOf(body) || isArrayBufferView(body))) {\n              this._bodyArrayBuffer = bufferClone(body);\n            } else {\n              throw new Error('unsupported BodyInit type');\n            }\n            if (!this.headers.get('content-type')) {\n              if (typeof body === 'string') {\n                this.headers.set('content-type', 'text/plain;charset=UTF-8');\n              } else if (this._bodyBlob && this._bodyBlob.type) {\n                this.headers.set('content-type', this._bodyBlob.type);\n              } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n                this.headers.set('content-type', 'application/x-www-form-urlencoded;charset=UTF-8');\n              }\n            }\n          };\n          if (support.blob) {\n            this.blob = function () {\n              var rejected = consumed(this);\n              if (rejected) {\n                return rejected;\n              }\n              if (this._bodyBlob) {\n                return Promise.resolve(this._bodyBlob);\n              } else if (this._bodyArrayBuffer) {\n                return Promise.resolve(new Blob([this._bodyArrayBuffer]));\n              } else if (this._bodyFormData) {\n                throw new Error('could not read FormData body as blob');\n              } else {\n                return Promise.resolve(new Blob([this._bodyText]));\n              }\n            };\n            this.arrayBuffer = function () {\n              if (this._bodyArrayBuffer) {\n                return consumed(this) || Promise.resolve(this._bodyArrayBuffer);\n              } else {\n                return this.blob().then(readBlobAsArrayBuffer);\n              }\n            };\n          }\n          this.text = function () {\n            var rejected = consumed(this);\n            if (rejected) {\n              return rejected;\n            }\n            if (this._bodyBlob) {\n              return readBlobAsText(this._bodyBlob);\n            } else if (this._bodyArrayBuffer) {\n              return Promise.resolve(readArrayBufferAsText(this._bodyArrayBuffer));\n            } else if (this._bodyFormData) {\n              throw new Error('could not read FormData body as text');\n            } else {\n              return Promise.resolve(this._bodyText);\n            }\n          };\n          if (support.formData) {\n            this.formData = function () {\n              return this.text().then(decode);\n            };\n          }\n          this.json = function () {\n            return this.text().then(JSON.parse);\n          };\n          return this;\n        }\n\n        // HTTP methods whose capitalization should be normalized\n        var methods = ['DELETE', 'GET', 'HEAD', 'OPTIONS', 'POST', 'PUT'];\n        function normalizeMethod(method) {\n          var upcased = method.toUpperCase();\n          return methods.indexOf(upcased) > -1 ? upcased : method;\n        }\n        function Request(input, options) {\n          options = options || {};\n          var body = options.body;\n          if (input instanceof Request) {\n            if (input.bodyUsed) {\n              throw new TypeError('Already read');\n            }\n            this.url = input.url;\n            this.credentials = input.credentials;\n            if (!options.headers) {\n              this.headers = new Headers(input.headers);\n            }\n            this.method = input.method;\n            this.mode = input.mode;\n            if (!body && input._bodyInit != null) {\n              body = input._bodyInit;\n              input.bodyUsed = true;\n            }\n          } else {\n            this.url = String(input);\n          }\n          this.credentials = options.credentials || this.credentials || 'omit';\n          if (options.headers || !this.headers) {\n            this.headers = new Headers(options.headers);\n          }\n          this.method = normalizeMethod(options.method || this.method || 'GET');\n          this.mode = options.mode || this.mode || null;\n          this.referrer = null;\n          if ((this.method === 'GET' || this.method === 'HEAD') && body) {\n            throw new TypeError('Body not allowed for GET or HEAD requests');\n          }\n          this._initBody(body);\n        }\n        Request.prototype.clone = function () {\n          return new Request(this, {\n            body: this._bodyInit\n          });\n        };\n        function decode(body) {\n          var form = new FormData();\n          body.trim().split('&').forEach(function (bytes) {\n            if (bytes) {\n              var split = bytes.split('=');\n              var name = split.shift().replace(/\\+/g, ' ');\n              var value = split.join('=').replace(/\\+/g, ' ');\n              form.append(decodeURIComponent(name), decodeURIComponent(value));\n            }\n          });\n          return form;\n        }\n        function parseHeaders(rawHeaders) {\n          var headers = new Headers();\n          // Replace instances of \\r\\n and \\n followed by at least one space or horizontal tab with a space\n          // https://tools.ietf.org/html/rfc7230#section-3.2\n          var preProcessedHeaders = rawHeaders.replace(/\\r?\\n[\\t ]+/g, ' ');\n          preProcessedHeaders.split(/\\r?\\n/).forEach(function (line) {\n            var parts = line.split(':');\n            var key = parts.shift().trim();\n            if (key) {\n              var value = parts.join(':').trim();\n              headers.append(key, value);\n            }\n          });\n          return headers;\n        }\n        Body.call(Request.prototype);\n        function Response(bodyInit, options) {\n          if (!options) {\n            options = {};\n          }\n          this.type = 'default';\n          this.status = options.status === undefined ? 200 : options.status;\n          this.ok = this.status >= 200 && this.status < 300;\n          this.statusText = 'statusText' in options ? options.statusText : 'OK';\n          this.headers = new Headers(options.headers);\n          this.url = options.url || '';\n          this._initBody(bodyInit);\n        }\n        Body.call(Response.prototype);\n        Response.prototype.clone = function () {\n          return new Response(this._bodyInit, {\n            status: this.status,\n            statusText: this.statusText,\n            headers: new Headers(this.headers),\n            url: this.url\n          });\n        };\n        Response.error = function () {\n          var response = new Response(null, {\n            status: 0,\n            statusText: ''\n          });\n          response.type = 'error';\n          return response;\n        };\n        var redirectStatuses = [301, 302, 303, 307, 308];\n        Response.redirect = function (url, status) {\n          if (redirectStatuses.indexOf(status) === -1) {\n            throw new RangeError('Invalid status code');\n          }\n          return new Response(null, {\n            status: status,\n            headers: {\n              location: url\n            }\n          });\n        };\n        self.Headers = Headers;\n        self.Request = Request;\n        self.Response = Response;\n        self.fetch = function (input, init) {\n          return new Promise(function (resolve, reject) {\n            var request = new Request(input, init);\n            var xhr = new XMLHttpRequest();\n            xhr.onload = function () {\n              var options = {\n                status: xhr.status,\n                statusText: xhr.statusText,\n                headers: parseHeaders(xhr.getAllResponseHeaders() || '')\n              };\n              options.url = 'responseURL' in xhr ? xhr.responseURL : options.headers.get('X-Request-URL');\n              var body = 'response' in xhr ? xhr.response : xhr.responseText;\n              resolve(new Response(body, options));\n            };\n            xhr.onerror = function () {\n              reject(new TypeError('Network request failed'));\n            };\n            xhr.ontimeout = function () {\n              reject(new TypeError('Network request failed'));\n            };\n            xhr.open(request.method, request.url, true);\n            if (request.credentials === 'include') {\n              xhr.withCredentials = true;\n            } else if (request.credentials === 'omit') {\n              xhr.withCredentials = false;\n            }\n            if ('responseType' in xhr && support.blob) {\n              xhr.responseType = 'blob';\n            }\n            request.headers.forEach(function (value, name) {\n              xhr.setRequestHeader(name, value);\n            });\n            xhr.send(typeof request._bodyInit === 'undefined' ? null : request._bodyInit);\n          });\n        };\n        self.fetch.polyfill = true;\n      })(typeof self !== 'undefined' ? self : this);\n      return {\n        fetch: self.fetch,\n        Headers: self.Headers,\n        Request: self.Request,\n        Response: self.Response\n      };\n    }();\n  }\n  if (typeof define === 'function' && define.amd) {\n    define(function () {\n      return fetchPonyfill;\n    });\n  } else if (typeof exports === 'object') {\n    module.exports = fetchPonyfill;\n  } else {\n    self.fetchPonyfill = fetchPonyfill;\n  }\n})(typeof self !== 'undefined' ? self : typeof global !== 'undefined' ? global : this);","map":{"version":3,"names":["self","fetchPonyfill","options","Promise","XMLHttpRequest","global","Object","create","fetch","value","undefined","writable","support","searchParams","iterable","Symbol","blob","Blob","e","formData","arrayBuffer","viewClasses","isDataView","obj","DataView","prototype","isPrototypeOf","isArrayBufferView","ArrayBuffer","isView","indexOf","toString","call","normalizeName","name","String","test","TypeError","toLowerCase","normalizeValue","iteratorFor","items","iterator","next","shift","done","Headers","headers","map","forEach","append","Array","isArray","header","getOwnPropertyNames","oldValue","get","has","hasOwnProperty","set","callback","thisArg","keys","push","values","entries","consumed","body","bodyUsed","reject","fileReaderReady","reader","resolve","onload","result","onerror","error","readBlobAsArrayBuffer","FileReader","promise","readAsArrayBuffer","readBlobAsText","readAsText","readArrayBufferAsText","buf","view","Uint8Array","chars","length","i","fromCharCode","join","bufferClone","slice","byteLength","buffer","Body","_initBody","_bodyInit","_bodyText","_bodyBlob","FormData","_bodyFormData","URLSearchParams","_bodyArrayBuffer","Error","type","rejected","then","text","decode","json","JSON","parse","methods","normalizeMethod","method","upcased","toUpperCase","Request","input","url","credentials","mode","referrer","clone","form","trim","split","bytes","replace","decodeURIComponent","parseHeaders","rawHeaders","preProcessedHeaders","line","parts","key","Response","bodyInit","status","ok","statusText","response","redirectStatuses","redirect","RangeError","location","init","request","xhr","getAllResponseHeaders","responseURL","responseText","ontimeout","open","withCredentials","responseType","setRequestHeader","send","polyfill","define","amd","exports","module"],"sources":["C:/Users/jack/git/hackathon/starter-files/node_modules/fetch-ponyfill/build/fetch-browser.js"],"sourcesContent":["(function (self) {\n  'use strict';\n\n  function fetchPonyfill(options) {\n    var Promise = options && options.Promise || self.Promise;\n    var XMLHttpRequest = options && options.XMLHttpRequest || self.XMLHttpRequest;\n    var global = self;\n\n    return (function () {\n      var self = Object.create(global, {\n        fetch: {\n          value: undefined,\n          writable: true\n        }\n      });\n\n      (function(self) {\n        'use strict';\n\n        if (self.fetch) {\n          return\n        }\n\n        var support = {\n          searchParams: 'URLSearchParams' in self,\n          iterable: 'Symbol' in self && 'iterator' in Symbol,\n          blob: 'FileReader' in self && 'Blob' in self && (function() {\n            try {\n              new Blob()\n              return true\n            } catch(e) {\n              return false\n            }\n          })(),\n          formData: 'FormData' in self,\n          arrayBuffer: 'ArrayBuffer' in self\n        }\n\n        if (support.arrayBuffer) {\n          var viewClasses = [\n            '[object Int8Array]',\n            '[object Uint8Array]',\n            '[object Uint8ClampedArray]',\n            '[object Int16Array]',\n            '[object Uint16Array]',\n            '[object Int32Array]',\n            '[object Uint32Array]',\n            '[object Float32Array]',\n            '[object Float64Array]'\n          ]\n\n          var isDataView = function(obj) {\n            return obj && DataView.prototype.isPrototypeOf(obj)\n          }\n\n          var isArrayBufferView = ArrayBuffer.isView || function(obj) {\n            return obj && viewClasses.indexOf(Object.prototype.toString.call(obj)) > -1\n          }\n        }\n\n        function normalizeName(name) {\n          if (typeof name !== 'string') {\n            name = String(name)\n          }\n          if (/[^a-z0-9\\-#$%&'*+.\\^_`|~]/i.test(name)) {\n            throw new TypeError('Invalid character in header field name')\n          }\n          return name.toLowerCase()\n        }\n\n        function normalizeValue(value) {\n          if (typeof value !== 'string') {\n            value = String(value)\n          }\n          return value\n        }\n\n        // Build a destructive iterator for the value list\n        function iteratorFor(items) {\n          var iterator = {\n            next: function() {\n              var value = items.shift()\n              return {done: value === undefined, value: value}\n            }\n          }\n\n          if (support.iterable) {\n            iterator[Symbol.iterator] = function() {\n              return iterator\n            }\n          }\n\n          return iterator\n        }\n\n        function Headers(headers) {\n          this.map = {}\n\n          if (headers instanceof Headers) {\n            headers.forEach(function(value, name) {\n              this.append(name, value)\n            }, this)\n          } else if (Array.isArray(headers)) {\n            headers.forEach(function(header) {\n              this.append(header[0], header[1])\n            }, this)\n          } else if (headers) {\n            Object.getOwnPropertyNames(headers).forEach(function(name) {\n              this.append(name, headers[name])\n            }, this)\n          }\n        }\n\n        Headers.prototype.append = function(name, value) {\n          name = normalizeName(name)\n          value = normalizeValue(value)\n          var oldValue = this.map[name]\n          this.map[name] = oldValue ? oldValue+','+value : value\n        }\n\n        Headers.prototype['delete'] = function(name) {\n          delete this.map[normalizeName(name)]\n        }\n\n        Headers.prototype.get = function(name) {\n          name = normalizeName(name)\n          return this.has(name) ? this.map[name] : null\n        }\n\n        Headers.prototype.has = function(name) {\n          return this.map.hasOwnProperty(normalizeName(name))\n        }\n\n        Headers.prototype.set = function(name, value) {\n          this.map[normalizeName(name)] = normalizeValue(value)\n        }\n\n        Headers.prototype.forEach = function(callback, thisArg) {\n          for (var name in this.map) {\n            if (this.map.hasOwnProperty(name)) {\n              callback.call(thisArg, this.map[name], name, this)\n            }\n          }\n        }\n\n        Headers.prototype.keys = function() {\n          var items = []\n          this.forEach(function(value, name) { items.push(name) })\n          return iteratorFor(items)\n        }\n\n        Headers.prototype.values = function() {\n          var items = []\n          this.forEach(function(value) { items.push(value) })\n          return iteratorFor(items)\n        }\n\n        Headers.prototype.entries = function() {\n          var items = []\n          this.forEach(function(value, name) { items.push([name, value]) })\n          return iteratorFor(items)\n        }\n\n        if (support.iterable) {\n          Headers.prototype[Symbol.iterator] = Headers.prototype.entries\n        }\n\n        function consumed(body) {\n          if (body.bodyUsed) {\n            return Promise.reject(new TypeError('Already read'))\n          }\n          body.bodyUsed = true\n        }\n\n        function fileReaderReady(reader) {\n          return new Promise(function(resolve, reject) {\n            reader.onload = function() {\n              resolve(reader.result)\n            }\n            reader.onerror = function() {\n              reject(reader.error)\n            }\n          })\n        }\n\n        function readBlobAsArrayBuffer(blob) {\n          var reader = new FileReader()\n          var promise = fileReaderReady(reader)\n          reader.readAsArrayBuffer(blob)\n          return promise\n        }\n\n        function readBlobAsText(blob) {\n          var reader = new FileReader()\n          var promise = fileReaderReady(reader)\n          reader.readAsText(blob)\n          return promise\n        }\n\n        function readArrayBufferAsText(buf) {\n          var view = new Uint8Array(buf)\n          var chars = new Array(view.length)\n\n          for (var i = 0; i < view.length; i++) {\n            chars[i] = String.fromCharCode(view[i])\n          }\n          return chars.join('')\n        }\n\n        function bufferClone(buf) {\n          if (buf.slice) {\n            return buf.slice(0)\n          } else {\n            var view = new Uint8Array(buf.byteLength)\n            view.set(new Uint8Array(buf))\n            return view.buffer\n          }\n        }\n\n        function Body() {\n          this.bodyUsed = false\n\n          this._initBody = function(body) {\n            this._bodyInit = body\n            if (!body) {\n              this._bodyText = ''\n            } else if (typeof body === 'string') {\n              this._bodyText = body\n            } else if (support.blob && Blob.prototype.isPrototypeOf(body)) {\n              this._bodyBlob = body\n            } else if (support.formData && FormData.prototype.isPrototypeOf(body)) {\n              this._bodyFormData = body\n            } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n              this._bodyText = body.toString()\n            } else if (support.arrayBuffer && support.blob && isDataView(body)) {\n              this._bodyArrayBuffer = bufferClone(body.buffer)\n              // IE 10-11 can't handle a DataView body.\n              this._bodyInit = new Blob([this._bodyArrayBuffer])\n            } else if (support.arrayBuffer && (ArrayBuffer.prototype.isPrototypeOf(body) || isArrayBufferView(body))) {\n              this._bodyArrayBuffer = bufferClone(body)\n            } else {\n              throw new Error('unsupported BodyInit type')\n            }\n\n            if (!this.headers.get('content-type')) {\n              if (typeof body === 'string') {\n                this.headers.set('content-type', 'text/plain;charset=UTF-8')\n              } else if (this._bodyBlob && this._bodyBlob.type) {\n                this.headers.set('content-type', this._bodyBlob.type)\n              } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n                this.headers.set('content-type', 'application/x-www-form-urlencoded;charset=UTF-8')\n              }\n            }\n          }\n\n          if (support.blob) {\n            this.blob = function() {\n              var rejected = consumed(this)\n              if (rejected) {\n                return rejected\n              }\n\n              if (this._bodyBlob) {\n                return Promise.resolve(this._bodyBlob)\n              } else if (this._bodyArrayBuffer) {\n                return Promise.resolve(new Blob([this._bodyArrayBuffer]))\n              } else if (this._bodyFormData) {\n                throw new Error('could not read FormData body as blob')\n              } else {\n                return Promise.resolve(new Blob([this._bodyText]))\n              }\n            }\n\n            this.arrayBuffer = function() {\n              if (this._bodyArrayBuffer) {\n                return consumed(this) || Promise.resolve(this._bodyArrayBuffer)\n              } else {\n                return this.blob().then(readBlobAsArrayBuffer)\n              }\n            }\n          }\n\n          this.text = function() {\n            var rejected = consumed(this)\n            if (rejected) {\n              return rejected\n            }\n\n            if (this._bodyBlob) {\n              return readBlobAsText(this._bodyBlob)\n            } else if (this._bodyArrayBuffer) {\n              return Promise.resolve(readArrayBufferAsText(this._bodyArrayBuffer))\n            } else if (this._bodyFormData) {\n              throw new Error('could not read FormData body as text')\n            } else {\n              return Promise.resolve(this._bodyText)\n            }\n          }\n\n          if (support.formData) {\n            this.formData = function() {\n              return this.text().then(decode)\n            }\n          }\n\n          this.json = function() {\n            return this.text().then(JSON.parse)\n          }\n\n          return this\n        }\n\n        // HTTP methods whose capitalization should be normalized\n        var methods = ['DELETE', 'GET', 'HEAD', 'OPTIONS', 'POST', 'PUT']\n\n        function normalizeMethod(method) {\n          var upcased = method.toUpperCase()\n          return (methods.indexOf(upcased) > -1) ? upcased : method\n        }\n\n        function Request(input, options) {\n          options = options || {}\n          var body = options.body\n\n          if (input instanceof Request) {\n            if (input.bodyUsed) {\n              throw new TypeError('Already read')\n            }\n            this.url = input.url\n            this.credentials = input.credentials\n            if (!options.headers) {\n              this.headers = new Headers(input.headers)\n            }\n            this.method = input.method\n            this.mode = input.mode\n            if (!body && input._bodyInit != null) {\n              body = input._bodyInit\n              input.bodyUsed = true\n            }\n          } else {\n            this.url = String(input)\n          }\n\n          this.credentials = options.credentials || this.credentials || 'omit'\n          if (options.headers || !this.headers) {\n            this.headers = new Headers(options.headers)\n          }\n          this.method = normalizeMethod(options.method || this.method || 'GET')\n          this.mode = options.mode || this.mode || null\n          this.referrer = null\n\n          if ((this.method === 'GET' || this.method === 'HEAD') && body) {\n            throw new TypeError('Body not allowed for GET or HEAD requests')\n          }\n          this._initBody(body)\n        }\n\n        Request.prototype.clone = function() {\n          return new Request(this, { body: this._bodyInit })\n        }\n\n        function decode(body) {\n          var form = new FormData()\n          body.trim().split('&').forEach(function(bytes) {\n            if (bytes) {\n              var split = bytes.split('=')\n              var name = split.shift().replace(/\\+/g, ' ')\n              var value = split.join('=').replace(/\\+/g, ' ')\n              form.append(decodeURIComponent(name), decodeURIComponent(value))\n            }\n          })\n          return form\n        }\n\n        function parseHeaders(rawHeaders) {\n          var headers = new Headers()\n          // Replace instances of \\r\\n and \\n followed by at least one space or horizontal tab with a space\n          // https://tools.ietf.org/html/rfc7230#section-3.2\n          var preProcessedHeaders = rawHeaders.replace(/\\r?\\n[\\t ]+/g, ' ')\n          preProcessedHeaders.split(/\\r?\\n/).forEach(function(line) {\n            var parts = line.split(':')\n            var key = parts.shift().trim()\n            if (key) {\n              var value = parts.join(':').trim()\n              headers.append(key, value)\n            }\n          })\n          return headers\n        }\n\n        Body.call(Request.prototype)\n\n        function Response(bodyInit, options) {\n          if (!options) {\n            options = {}\n          }\n\n          this.type = 'default'\n          this.status = options.status === undefined ? 200 : options.status\n          this.ok = this.status >= 200 && this.status < 300\n          this.statusText = 'statusText' in options ? options.statusText : 'OK'\n          this.headers = new Headers(options.headers)\n          this.url = options.url || ''\n          this._initBody(bodyInit)\n        }\n\n        Body.call(Response.prototype)\n\n        Response.prototype.clone = function() {\n          return new Response(this._bodyInit, {\n            status: this.status,\n            statusText: this.statusText,\n            headers: new Headers(this.headers),\n            url: this.url\n          })\n        }\n\n        Response.error = function() {\n          var response = new Response(null, {status: 0, statusText: ''})\n          response.type = 'error'\n          return response\n        }\n\n        var redirectStatuses = [301, 302, 303, 307, 308]\n\n        Response.redirect = function(url, status) {\n          if (redirectStatuses.indexOf(status) === -1) {\n            throw new RangeError('Invalid status code')\n          }\n\n          return new Response(null, {status: status, headers: {location: url}})\n        }\n\n        self.Headers = Headers\n        self.Request = Request\n        self.Response = Response\n\n        self.fetch = function(input, init) {\n          return new Promise(function(resolve, reject) {\n            var request = new Request(input, init)\n            var xhr = new XMLHttpRequest()\n\n            xhr.onload = function() {\n              var options = {\n                status: xhr.status,\n                statusText: xhr.statusText,\n                headers: parseHeaders(xhr.getAllResponseHeaders() || '')\n              }\n              options.url = 'responseURL' in xhr ? xhr.responseURL : options.headers.get('X-Request-URL')\n              var body = 'response' in xhr ? xhr.response : xhr.responseText\n              resolve(new Response(body, options))\n            }\n\n            xhr.onerror = function() {\n              reject(new TypeError('Network request failed'))\n            }\n\n            xhr.ontimeout = function() {\n              reject(new TypeError('Network request failed'))\n            }\n\n            xhr.open(request.method, request.url, true)\n\n            if (request.credentials === 'include') {\n              xhr.withCredentials = true\n            } else if (request.credentials === 'omit') {\n              xhr.withCredentials = false\n            }\n\n            if ('responseType' in xhr && support.blob) {\n              xhr.responseType = 'blob'\n            }\n\n            request.headers.forEach(function(value, name) {\n              xhr.setRequestHeader(name, value)\n            })\n\n            xhr.send(typeof request._bodyInit === 'undefined' ? null : request._bodyInit)\n          })\n        }\n        self.fetch.polyfill = true\n      })(typeof self !== 'undefined' ? self : this);\n\n\n      return {\n        fetch: self.fetch,\n        Headers: self.Headers,\n        Request: self.Request,\n        Response: self.Response\n      };\n    }());\n  }\n\n  if (typeof define === 'function' && define.amd) {\n    define(function () {\n      return fetchPonyfill;\n    });\n  } else if (typeof exports === 'object') {\n    module.exports = fetchPonyfill;\n  } else {\n    self.fetchPonyfill = fetchPonyfill;\n  }\n}(typeof self !== 'undefined' ? self : typeof global !== 'undefined' ? global : this));\n\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}