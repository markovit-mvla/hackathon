{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.toType = exports.TypeOutput = exports.bnToRlp = exports.bnToUnpaddedBuffer = exports.bnToHex = void 0;\nvar externals_1 = require(\"./externals\");\nvar internal_1 = require(\"./internal\");\nvar bytes_1 = require(\"./bytes\");\n/**\n * Convert BN to 0x-prefixed hex string.\n */\nfunction bnToHex(value) {\n  return \"0x\".concat(value.toString(16));\n}\nexports.bnToHex = bnToHex;\n/**\n * Convert value from BN to an unpadded Buffer\n * (useful for RLP transport)\n * @param value value to convert\n */\nfunction bnToUnpaddedBuffer(value) {\n  // Using `bn.toArrayLike(Buffer)` instead of `bn.toBuffer()`\n  // for compatibility with browserify and similar tools\n  return (0, bytes_1.unpadBuffer)(value.toArrayLike(Buffer));\n}\nexports.bnToUnpaddedBuffer = bnToUnpaddedBuffer;\n/**\n * Deprecated alias for {@link bnToUnpaddedBuffer}\n * @deprecated\n */\nfunction bnToRlp(value) {\n  return bnToUnpaddedBuffer(value);\n}\nexports.bnToRlp = bnToRlp;\n/**\n * Type output options\n */\nvar TypeOutput;\n(function (TypeOutput) {\n  TypeOutput[TypeOutput[\"Number\"] = 0] = \"Number\";\n  TypeOutput[TypeOutput[\"BN\"] = 1] = \"BN\";\n  TypeOutput[TypeOutput[\"Buffer\"] = 2] = \"Buffer\";\n  TypeOutput[TypeOutput[\"PrefixedHexString\"] = 3] = \"PrefixedHexString\";\n})(TypeOutput = exports.TypeOutput || (exports.TypeOutput = {}));\nfunction toType(input, outputType) {\n  if (input === null) {\n    return null;\n  }\n  if (input === undefined) {\n    return undefined;\n  }\n  if (typeof input === 'string' && !(0, internal_1.isHexString)(input)) {\n    throw new Error(\"A string must be provided with a 0x-prefix, given: \".concat(input));\n  } else if (typeof input === 'number' && !Number.isSafeInteger(input)) {\n    throw new Error('The provided number is greater than MAX_SAFE_INTEGER (please use an alternative input type)');\n  }\n  var output = (0, bytes_1.toBuffer)(input);\n  if (outputType === TypeOutput.Buffer) {\n    return output;\n  } else if (outputType === TypeOutput.BN) {\n    return new externals_1.BN(output);\n  } else if (outputType === TypeOutput.Number) {\n    var bn = new externals_1.BN(output);\n    var max = new externals_1.BN(Number.MAX_SAFE_INTEGER.toString());\n    if (bn.gt(max)) {\n      throw new Error('The provided number is greater than MAX_SAFE_INTEGER (please use an alternative output type)');\n    }\n    return bn.toNumber();\n  } else {\n    // outputType === TypeOutput.PrefixedHexString\n    return \"0x\".concat(output.toString('hex'));\n  }\n}\nexports.toType = toType;","map":{"version":3,"names":["externals_1","require","internal_1","bytes_1","bnToHex","value","concat","toString","exports","bnToUnpaddedBuffer","unpadBuffer","toArrayLike","Buffer","bnToRlp","TypeOutput","toType","input","outputType","undefined","isHexString","Error","Number","isSafeInteger","output","toBuffer","BN","bn","max","MAX_SAFE_INTEGER","gt","toNumber"],"sources":["../src/types.ts"],"sourcesContent":[null],"mappings":";;;;;;AAAA,IAAAA,WAAA,GAAAC,OAAA;AACA,IAAAC,UAAA,GAAAD,OAAA;AAEA,IAAAE,OAAA,GAAAF,OAAA;AAiDA;;;AAGA,SAAgBG,OAAOA,CAACC,KAAS;EAC/B,OAAO,KAAAC,MAAA,CAAKD,KAAK,CAACE,QAAQ,CAAC,EAAE,CAAC,CAAE;AAClC;AAFAC,OAAA,CAAAJ,OAAA,GAAAA,OAAA;AAIA;;;;;AAKA,SAAgBK,kBAAkBA,CAACJ,KAAS;EAC1C;EACA;EACA,OAAO,IAAAF,OAAA,CAAAO,WAAW,EAACL,KAAK,CAACM,WAAW,CAACC,MAAM,CAAC,CAAC;AAC/C;AAJAJ,OAAA,CAAAC,kBAAA,GAAAA,kBAAA;AAMA;;;;AAIA,SAAgBI,OAAOA,CAACR,KAAS;EAC/B,OAAOI,kBAAkB,CAACJ,KAAK,CAAC;AAClC;AAFAG,OAAA,CAAAK,OAAA,GAAAA,OAAA;AAIA;;;AAGA,IAAYC,UAKX;AALD,WAAYA,UAAU;EACpBA,UAAA,CAAAA,UAAA,0BAAM;EACNA,UAAA,CAAAA,UAAA,kBAAE;EACFA,UAAA,CAAAA,UAAA,0BAAM;EACNA,UAAA,CAAAA,UAAA,gDAAiB;AACnB,CAAC,EALWA,UAAU,GAAVN,OAAA,CAAAM,UAAU,KAAVN,OAAA,CAAAM,UAAU;AA0BtB,SAAgBC,MAAMA,CACpBC,KAAyB,EACzBC,UAAa;EAEb,IAAID,KAAK,KAAK,IAAI,EAAE;IAClB,OAAO,IAAI;;EAEb,IAAIA,KAAK,KAAKE,SAAS,EAAE;IACvB,OAAOA,SAAS;;EAGlB,IAAI,OAAOF,KAAK,KAAK,QAAQ,IAAI,CAAC,IAAAd,UAAA,CAAAiB,WAAW,EAACH,KAAK,CAAC,EAAE;IACpD,MAAM,IAAII,KAAK,CAAC,sDAAAd,MAAA,CAAsDU,KAAK,CAAE,CAAC;GAC/E,MAAM,IAAI,OAAOA,KAAK,KAAK,QAAQ,IAAI,CAACK,MAAM,CAACC,aAAa,CAACN,KAAK,CAAC,EAAE;IACpE,MAAM,IAAII,KAAK,CACb,6FAA6F,CAC9F;;EAGH,IAAMG,MAAM,GAAG,IAAApB,OAAA,CAAAqB,QAAQ,EAACR,KAAK,CAAC;EAE9B,IAAIC,UAAU,KAAKH,UAAU,CAACF,MAAM,EAAE;IACpC,OAAOW,MAAiC;GACzC,MAAM,IAAIN,UAAU,KAAKH,UAAU,CAACW,EAAE,EAAE;IACvC,OAAO,IAAIzB,WAAA,CAAAyB,EAAE,CAACF,MAAM,CAA4B;GACjD,MAAM,IAAIN,UAAU,KAAKH,UAAU,CAACO,MAAM,EAAE;IAC3C,IAAMK,EAAE,GAAG,IAAI1B,WAAA,CAAAyB,EAAE,CAACF,MAAM,CAAC;IACzB,IAAMI,GAAG,GAAG,IAAI3B,WAAA,CAAAyB,EAAE,CAACJ,MAAM,CAACO,gBAAgB,CAACrB,QAAQ,EAAE,CAAC;IACtD,IAAImB,EAAE,CAACG,EAAE,CAACF,GAAG,CAAC,EAAE;MACd,MAAM,IAAIP,KAAK,CACb,8FAA8F,CAC/F;;IAEH,OAAOM,EAAE,CAACI,QAAQ,EAA6B;GAChD,MAAM;IACL;IACA,OAAO,KAAAxB,MAAA,CAAKiB,MAAM,CAAChB,QAAQ,CAAC,KAAK,CAAC,CAA6B;;AAEnE;AAtCAC,OAAA,CAAAO,MAAA,GAAAA,MAAA"},"metadata":{},"sourceType":"script"}