{"ast":null,"code":"import { __awaiter, __generator } from \"tslib\";\n/**\n * Helper for converting functions which take a callback as their final argument\n * to functions which return a promise.\n */\nexport function promisify(f) {\n  return new Promise(function (resolve, reject) {\n    return f(function (error, result) {\n      if (error != null) {\n        reject(error);\n      } else {\n        resolve(result);\n      }\n    });\n  });\n}\n/**\n * Helper for converting functions which return a promise to functions which\n * take a callback as their final argument.\n */\nexport function callWhenDone(promise, callback) {\n  promise.then(function (result) {\n    callback(null, result);\n  }, function (error) {\n    callback(error);\n  });\n}\nexport function delay(ms) {\n  return new Promise(function (resolve) {\n    return setTimeout(resolve, ms);\n  });\n}\nexport function withTimeout(promise, ms) {\n  return Promise.race([promise, new Promise(function (_, reject) {\n    return setTimeout(function () {\n      return reject(new Error(\"Timeout\"));\n    }, ms);\n  })]);\n}\nvar MIN_RETRY_DELAY = 1000;\nvar RETRY_BACKOFF_FACTOR = 2;\nvar MAX_RETRY_DELAY = 30000;\nexport function withBackoffRetries(f, retryCount, shouldRetry) {\n  if (shouldRetry === void 0) {\n    shouldRetry = function () {\n      return true;\n    };\n  }\n  return __awaiter(this, void 0, void 0, function () {\n    var nextWaitTime, i, error_1;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          nextWaitTime = 0;\n          i = 0;\n          _a.label = 1;\n        case 1:\n          if (!true) return [3 /*break*/, 7];\n          _a.label = 2;\n        case 2:\n          _a.trys.push([2, 4,, 6]);\n          return [4 /*yield*/, f()];\n        case 3:\n          return [2 /*return*/, _a.sent()];\n        case 4:\n          error_1 = _a.sent();\n          i++;\n          if (i >= retryCount || !shouldRetry(error_1)) {\n            throw error_1;\n          }\n          return [4 /*yield*/, delay(nextWaitTime)];\n        case 5:\n          _a.sent();\n          if (!shouldRetry(error_1)) {\n            throw error_1;\n          }\n          nextWaitTime = nextWaitTime === 0 ? MIN_RETRY_DELAY : Math.min(MAX_RETRY_DELAY, RETRY_BACKOFF_FACTOR * nextWaitTime);\n          return [3 /*break*/, 6];\n        case 6:\n          return [3 /*break*/, 1];\n        case 7:\n          return [2 /*return*/];\n      }\n    });\n  });\n}\n\nexport function makeCancelToken() {\n  var cancelled = false;\n  return {\n    cancel: function () {\n      return cancelled = true;\n    },\n    isCancelled: function () {\n      return cancelled;\n    }\n  };\n}\nexport function throwIfCancelled(isCancelled) {\n  if (isCancelled()) {\n    throw CANCELLED;\n  }\n}\nexport var CANCELLED = new Error(\"Cancelled\");","map":{"version":3,"names":["promisify","f","Promise","resolve","reject","error","result","callWhenDone","promise","callback","then","delay","ms","setTimeout","withTimeout","race","_","Error","MIN_RETRY_DELAY","RETRY_BACKOFF_FACTOR","MAX_RETRY_DELAY","withBackoffRetries","retryCount","shouldRetry","nextWaitTime","i","_a","sent","error_1","Math","min","makeCancelToken","cancelled","cancel","isCancelled","throwIfCancelled","CANCELLED"],"sources":["../../../src/util/promises.ts"],"sourcesContent":["import { Web3Callback } from \"../types\";\n\n/**\n * Helper for converting functions which take a callback as their final argument\n * to functions which return a promise.\n */\nexport function promisify<T>(\n  f: (callback: Web3Callback<T>) => void,\n): Promise<T> {\n  return new Promise((resolve, reject) =>\n    f((error, result) => {\n      if (error != null) {\n        reject(error);\n      } else {\n        resolve(result!);\n      }\n    }),\n  );\n}\n\n/**\n * Helper for converting functions which return a promise to functions which\n * take a callback as their final argument.\n */\nexport function callWhenDone<T>(\n  promise: Promise<T>,\n  callback: Web3Callback<T>,\n): void {\n  promise.then(\n    (result) => {\n      callback(null, result);\n    },\n    (error) => {\n      callback(error);\n    },\n  );\n}\n\nexport function delay(ms: number): Promise<void> {\n  return new Promise((resolve) => setTimeout(resolve, ms));\n}\n\nexport function withTimeout<T>(promise: Promise<T>, ms: number): Promise<T> {\n  return Promise.race([\n    promise,\n    new Promise<T>((_, reject) =>\n      setTimeout(() => reject(new Error(\"Timeout\")), ms),\n    ),\n  ]);\n}\n\nconst MIN_RETRY_DELAY = 1000;\nconst RETRY_BACKOFF_FACTOR = 2;\nconst MAX_RETRY_DELAY = 30000;\n\nexport async function withBackoffRetries<T>(\n  f: () => Promise<T>,\n  retryCount: number,\n  shouldRetry: (error: unknown) => boolean = () => true,\n): Promise<T> {\n  let nextWaitTime = 0;\n  let i = 0;\n  while (true) {\n    try {\n      return await f();\n    } catch (error) {\n      i++;\n      if (i >= retryCount || !shouldRetry(error)) {\n        throw error;\n      }\n      await delay(nextWaitTime);\n      if (!shouldRetry(error)) {\n        throw error;\n      }\n      nextWaitTime =\n        nextWaitTime === 0\n          ? MIN_RETRY_DELAY\n          : Math.min(MAX_RETRY_DELAY, RETRY_BACKOFF_FACTOR * nextWaitTime);\n    }\n  }\n}\n\nexport interface CancelToken {\n  cancel(): void;\n  isCancelled(): boolean;\n}\n\nexport function makeCancelToken(): CancelToken {\n  let cancelled = false;\n  return { cancel: () => (cancelled = true), isCancelled: () => cancelled };\n}\n\nexport function throwIfCancelled(isCancelled: () => boolean): void {\n  if (isCancelled()) {\n    throw CANCELLED;\n  }\n}\n\nexport const CANCELLED = new Error(\"Cancelled\");\n"],"mappings":";AAEA;;;;AAIA,OAAM,SAAUA,SAASA,CACvBC,CAAsC;EAEtC,OAAO,IAAIC,OAAO,CAAC,UAACC,OAAO,EAAEC,MAAM;IACjC,OAAAH,CAAC,CAAC,UAACI,KAAK,EAAEC,MAAM;MACd,IAAID,KAAK,IAAI,IAAI,EAAE;QACjBD,MAAM,CAACC,KAAK,CAAC;OACd,MAAM;QACLF,OAAO,CAACG,MAAO,CAAC;;IAEpB,CAAC,CAAC;EANF,CAME,CACH;AACH;AAEA;;;;AAIA,OAAM,SAAUC,YAAYA,CAC1BC,OAAmB,EACnBC,QAAyB;EAEzBD,OAAO,CAACE,IAAI,CACV,UAACJ,MAAM;IACLG,QAAQ,CAAC,IAAI,EAAEH,MAAM,CAAC;EACxB,CAAC,EACD,UAACD,KAAK;IACJI,QAAQ,CAACJ,KAAK,CAAC;EACjB,CAAC,CACF;AACH;AAEA,OAAM,SAAUM,KAAKA,CAACC,EAAU;EAC9B,OAAO,IAAIV,OAAO,CAAC,UAACC,OAAO;IAAK,OAAAU,UAAU,CAACV,OAAO,EAAES,EAAE,CAAC;EAAvB,CAAuB,CAAC;AAC1D;AAEA,OAAM,SAAUE,WAAWA,CAAIN,OAAmB,EAAEI,EAAU;EAC5D,OAAOV,OAAO,CAACa,IAAI,CAAC,CAClBP,OAAO,EACP,IAAIN,OAAO,CAAI,UAACc,CAAC,EAAEZ,MAAM;IACvB,OAAAS,UAAU,CAAC;MAAM,OAAAT,MAAM,CAAC,IAAIa,KAAK,CAAC,SAAS,CAAC,CAAC;IAA5B,CAA4B,EAAEL,EAAE,CAAC;EAAlD,CAAkD,CACnD,CACF,CAAC;AACJ;AAEA,IAAMM,eAAe,GAAG,IAAI;AAC5B,IAAMC,oBAAoB,GAAG,CAAC;AAC9B,IAAMC,eAAe,GAAG,KAAK;AAE7B,OAAM,SAAgBC,kBAAkBA,CACtCpB,CAAmB,EACnBqB,UAAkB,EAClBC,WAAqD;EAArD,IAAAA,WAAA;IAAAA,WAAA,YAAAA,CAAA;MAAiD,WAAI;IAAJ,CAAI;EAAA;;;;;;UAEjDC,YAAY,GAAG,CAAC;UAChBC,CAAC,GAAG,CAAC;;;eACF,IAAI;;;;UAEA,qBAAMxB,CAAC,EAAE;;UAAhB,sBAAOyB,EAAA,CAAAC,IAAA,EAAS;;;UAEhBF,CAAC,EAAE;UACH,IAAIA,CAAC,IAAIH,UAAU,IAAI,CAACC,WAAW,CAACK,OAAK,CAAC,EAAE;YAC1C,MAAMA,OAAK;;UAEb,qBAAMjB,KAAK,CAACa,YAAY,CAAC;;UAAzBE,EAAA,CAAAC,IAAA,EAAyB;UACzB,IAAI,CAACJ,WAAW,CAACK,OAAK,CAAC,EAAE;YACvB,MAAMA,OAAK;;UAEbJ,YAAY,GACVA,YAAY,KAAK,CAAC,GACdN,eAAe,GACfW,IAAI,CAACC,GAAG,CAACV,eAAe,EAAED,oBAAoB,GAAGK,YAAY,CAAC;;;;;;;;;;;AAU1E,OAAM,SAAUO,eAAeA,CAAA;EAC7B,IAAIC,SAAS,GAAG,KAAK;EACrB,OAAO;IAAEC,MAAM,EAAE,SAAAA,CAAA;MAAM,OAACD,SAAS,GAAG,IAAI;IAAjB,CAAkB;IAAEE,WAAW,EAAE,SAAAA,CAAA;MAAM,OAAAF,SAAS;IAAT;EAAS,CAAE;AAC3E;AAEA,OAAM,SAAUG,gBAAgBA,CAACD,WAA0B;EACzD,IAAIA,WAAW,EAAE,EAAE;IACjB,MAAME,SAAS;;AAEnB;AAEA,OAAO,IAAMA,SAAS,GAAG,IAAInB,KAAK,CAAC,WAAW,CAAC"},"metadata":{},"sourceType":"module"}