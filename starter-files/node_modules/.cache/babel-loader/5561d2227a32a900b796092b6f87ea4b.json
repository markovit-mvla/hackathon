{"ast":null,"code":"\"use strict\";\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Address = void 0;\nvar assert_1 = __importDefault(require(\"assert\"));\nvar externals_1 = require(\"./externals\");\nvar bytes_1 = require(\"./bytes\");\nvar account_1 = require(\"./account\");\nvar Address = /** @class */function () {\n  function Address(buf) {\n    (0, assert_1.default)(buf.length === 20, 'Invalid address length');\n    this.buf = buf;\n  }\n  /**\n   * Returns the zero address.\n   */\n  Address.zero = function () {\n    return new Address((0, bytes_1.zeros)(20));\n  };\n  /**\n   * Returns an Address object from a hex-encoded string.\n   * @param str - Hex-encoded address\n   */\n  Address.fromString = function (str) {\n    (0, assert_1.default)((0, account_1.isValidAddress)(str), 'Invalid address');\n    return new Address((0, bytes_1.toBuffer)(str));\n  };\n  /**\n   * Returns an address for a given public key.\n   * @param pubKey The two points of an uncompressed key\n   */\n  Address.fromPublicKey = function (pubKey) {\n    (0, assert_1.default)(Buffer.isBuffer(pubKey), 'Public key should be Buffer');\n    var buf = (0, account_1.pubToAddress)(pubKey);\n    return new Address(buf);\n  };\n  /**\n   * Returns an address for a given private key.\n   * @param privateKey A private key must be 256 bits wide\n   */\n  Address.fromPrivateKey = function (privateKey) {\n    (0, assert_1.default)(Buffer.isBuffer(privateKey), 'Private key should be Buffer');\n    var buf = (0, account_1.privateToAddress)(privateKey);\n    return new Address(buf);\n  };\n  /**\n   * Generates an address for a newly created contract.\n   * @param from The address which is creating this new address\n   * @param nonce The nonce of the from account\n   */\n  Address.generate = function (from, nonce) {\n    (0, assert_1.default)(externals_1.BN.isBN(nonce));\n    return new Address((0, account_1.generateAddress)(from.buf, nonce.toArrayLike(Buffer)));\n  };\n  /**\n   * Generates an address for a contract created using CREATE2.\n   * @param from The address which is creating this new address\n   * @param salt A salt\n   * @param initCode The init code of the contract being created\n   */\n  Address.generate2 = function (from, salt, initCode) {\n    (0, assert_1.default)(Buffer.isBuffer(salt));\n    (0, assert_1.default)(Buffer.isBuffer(initCode));\n    return new Address((0, account_1.generateAddress2)(from.buf, salt, initCode));\n  };\n  /**\n   * Is address equal to another.\n   */\n  Address.prototype.equals = function (address) {\n    return this.buf.equals(address.buf);\n  };\n  /**\n   * Is address zero.\n   */\n  Address.prototype.isZero = function () {\n    return this.equals(Address.zero());\n  };\n  /**\n   * True if address is in the address range defined\n   * by EIP-1352\n   */\n  Address.prototype.isPrecompileOrSystemAddress = function () {\n    var addressBN = new externals_1.BN(this.buf);\n    var rangeMin = new externals_1.BN(0);\n    var rangeMax = new externals_1.BN('ffff', 'hex');\n    return addressBN.gte(rangeMin) && addressBN.lte(rangeMax);\n  };\n  /**\n   * Returns hex encoding of address.\n   */\n  Address.prototype.toString = function () {\n    return '0x' + this.buf.toString('hex');\n  };\n  /**\n   * Returns Buffer representation of address.\n   */\n  Address.prototype.toBuffer = function () {\n    return Buffer.from(this.buf);\n  };\n  return Address;\n}();\nexports.Address = Address;","map":{"version":3,"names":["assert_1","__importDefault","require","externals_1","bytes_1","account_1","Address","buf","default","length","zero","zeros","fromString","str","isValidAddress","toBuffer","fromPublicKey","pubKey","Buffer","isBuffer","pubToAddress","fromPrivateKey","privateKey","privateToAddress","generate","from","nonce","BN","isBN","generateAddress","toArrayLike","generate2","salt","initCode","generateAddress2","prototype","equals","address","isZero","isPrecompileOrSystemAddress","addressBN","rangeMin","rangeMax","gte","lte","toString","exports"],"sources":["../src/address.ts"],"sourcesContent":[null],"mappings":"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"},"metadata":{},"sourceType":"script"}