{"ast":null,"code":"import { callWhenDone } from \"../util/promises\";\n/**\n * Returns a \"provider\" which can be passed to the Web3 constructor.\n */\nexport function makeAlchemyHttpProvider(sendJsonRpcPayload) {\n  function send(payload, callback) {\n    callWhenDone(sendJsonRpcPayload(payload), callback);\n  }\n  return {\n    send: send\n  };\n}","map":{"version":3,"names":["callWhenDone","makeAlchemyHttpProvider","sendJsonRpcPayload","send","payload","callback"],"sources":["../../../src/web3-adapter/httpProvider.ts"],"sourcesContent":["import {\n  SingleOrBatchRequest,\n  SingleOrBatchResponse,\n  Web3Callback,\n} from \"../types\";\nimport { callWhenDone } from \"../util/promises\";\nimport { SendJsonRpcPayloadFunction } from \"./sendJsonRpcPayload\";\n\n/**\n * Returns a \"provider\" which can be passed to the Web3 constructor.\n */\nexport function makeAlchemyHttpProvider(\n  sendJsonRpcPayload: SendJsonRpcPayloadFunction,\n) {\n  function send(\n    payload: SingleOrBatchRequest,\n    callback: Web3Callback<SingleOrBatchResponse>,\n  ): void {\n    callWhenDone(sendJsonRpcPayload(payload), callback);\n  }\n  return { send };\n}\n"],"mappings":"AAKA,SAASA,YAAY,QAAQ,kBAAkB;AAG/C;;;AAGA,OAAM,SAAUC,uBAAuBA,CACrCC,kBAA8C;EAE9C,SAASC,IAAIA,CACXC,OAA6B,EAC7BC,QAA6C;IAE7CL,YAAY,CAACE,kBAAkB,CAACE,OAAO,CAAC,EAAEC,QAAQ,CAAC;EACrD;EACA,OAAO;IAAEF,IAAI,EAAAA;EAAA,CAAE;AACjB"},"metadata":{},"sourceType":"module"}