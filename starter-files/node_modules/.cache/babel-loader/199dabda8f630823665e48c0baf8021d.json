{"ast":null,"code":"\"use strict\";\n\nimport { Coder } from \"./abstract-coder\";\n// Clones the functionality of an existing Coder, but without a localName\nexport class AnonymousCoder extends Coder {\n  constructor(coder) {\n    super(coder.name, coder.type, undefined, coder.dynamic);\n    this.coder = coder;\n  }\n  defaultValue() {\n    return this.coder.defaultValue();\n  }\n  encode(writer, value) {\n    return this.coder.encode(writer, value);\n  }\n  decode(reader) {\n    return this.coder.decode(reader);\n  }\n}","map":{"version":3,"names":["Coder","AnonymousCoder","constructor","coder","name","type","undefined","dynamic","defaultValue","encode","writer","value","decode","reader"],"sources":["../../src.ts/coders/anonymous.ts"],"sourcesContent":[null],"mappings":"AAAA,YAAY;;AAEZ,SAASA,KAAK,QAAwB,kBAAkB;AAExD;AACA,OAAM,MAAOC,cAAe,SAAQD,KAAK;EAGrCE,YAAYC,KAAY;IACpB,KAAK,CAACA,KAAK,CAACC,IAAI,EAAED,KAAK,CAACE,IAAI,EAAEC,SAAS,EAAEH,KAAK,CAACI,OAAO,CAAC;IACvD,IAAI,CAACJ,KAAK,GAAGA,KAAK;EACtB;EAEAK,YAAYA,CAAA;IACR,OAAO,IAAI,CAACL,KAAK,CAACK,YAAY,EAAE;EACpC;EAEAC,MAAMA,CAACC,MAAc,EAAEC,KAAU;IAC7B,OAAO,IAAI,CAACR,KAAK,CAACM,MAAM,CAACC,MAAM,EAAEC,KAAK,CAAC;EAC3C;EAEAC,MAAMA,CAACC,MAAc;IACjB,OAAO,IAAI,CAACV,KAAK,CAACS,MAAM,CAACC,MAAM,CAAC;EACpC"},"metadata":{},"sourceType":"module"}