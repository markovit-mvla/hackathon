{"ast":null,"code":"const keccakState = require('./keccak-state-unroll');\nfunction Keccak() {\n  // much faster than `new Array(50)`\n  this.state = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];\n  this.blockSize = null;\n  this.count = 0;\n  this.squeezing = false;\n}\nKeccak.prototype.initialize = function (rate, capacity) {\n  for (let i = 0; i < 50; ++i) this.state[i] = 0;\n  this.blockSize = rate / 8;\n  this.count = 0;\n  this.squeezing = false;\n};\nKeccak.prototype.absorb = function (data) {\n  for (let i = 0; i < data.length; ++i) {\n    this.state[~~(this.count / 4)] ^= data[i] << 8 * (this.count % 4);\n    this.count += 1;\n    if (this.count === this.blockSize) {\n      keccakState.p1600(this.state);\n      this.count = 0;\n    }\n  }\n};\nKeccak.prototype.absorbLastFewBits = function (bits) {\n  this.state[~~(this.count / 4)] ^= bits << 8 * (this.count % 4);\n  if ((bits & 0x80) !== 0 && this.count === this.blockSize - 1) keccakState.p1600(this.state);\n  this.state[~~((this.blockSize - 1) / 4)] ^= 0x80 << 8 * ((this.blockSize - 1) % 4);\n  keccakState.p1600(this.state);\n  this.count = 0;\n  this.squeezing = true;\n};\nKeccak.prototype.squeeze = function (length) {\n  if (!this.squeezing) this.absorbLastFewBits(0x01);\n  const output = Buffer.alloc(length);\n  for (let i = 0; i < length; ++i) {\n    output[i] = this.state[~~(this.count / 4)] >>> 8 * (this.count % 4) & 0xff;\n    this.count += 1;\n    if (this.count === this.blockSize) {\n      keccakState.p1600(this.state);\n      this.count = 0;\n    }\n  }\n  return output;\n};\nKeccak.prototype.copy = function (dest) {\n  for (let i = 0; i < 50; ++i) dest.state[i] = this.state[i];\n  dest.blockSize = this.blockSize;\n  dest.count = this.count;\n  dest.squeezing = this.squeezing;\n};\nmodule.exports = Keccak;","map":{"version":3,"names":["keccakState","require","Keccak","state","blockSize","count","squeezing","prototype","initialize","rate","capacity","i","absorb","data","length","p1600","absorbLastFewBits","bits","squeeze","output","Buffer","alloc","copy","dest","module","exports"],"sources":["C:/Users/jack/git/hackathon/starter-files/node_modules/keccak/lib/keccak.js"],"sourcesContent":["const keccakState = require('./keccak-state-unroll')\n\nfunction Keccak () {\n  // much faster than `new Array(50)`\n  this.state = [\n    0, 0, 0, 0, 0,\n    0, 0, 0, 0, 0,\n    0, 0, 0, 0, 0,\n    0, 0, 0, 0, 0,\n    0, 0, 0, 0, 0\n  ]\n\n  this.blockSize = null\n  this.count = 0\n  this.squeezing = false\n}\n\nKeccak.prototype.initialize = function (rate, capacity) {\n  for (let i = 0; i < 50; ++i) this.state[i] = 0\n  this.blockSize = rate / 8\n  this.count = 0\n  this.squeezing = false\n}\n\nKeccak.prototype.absorb = function (data) {\n  for (let i = 0; i < data.length; ++i) {\n    this.state[~~(this.count / 4)] ^= data[i] << (8 * (this.count % 4))\n    this.count += 1\n    if (this.count === this.blockSize) {\n      keccakState.p1600(this.state)\n      this.count = 0\n    }\n  }\n}\n\nKeccak.prototype.absorbLastFewBits = function (bits) {\n  this.state[~~(this.count / 4)] ^= bits << (8 * (this.count % 4))\n  if ((bits & 0x80) !== 0 && this.count === (this.blockSize - 1)) keccakState.p1600(this.state)\n  this.state[~~((this.blockSize - 1) / 4)] ^= 0x80 << (8 * ((this.blockSize - 1) % 4))\n  keccakState.p1600(this.state)\n  this.count = 0\n  this.squeezing = true\n}\n\nKeccak.prototype.squeeze = function (length) {\n  if (!this.squeezing) this.absorbLastFewBits(0x01)\n\n  const output = Buffer.alloc(length)\n  for (let i = 0; i < length; ++i) {\n    output[i] = (this.state[~~(this.count / 4)] >>> (8 * (this.count % 4))) & 0xff\n    this.count += 1\n    if (this.count === this.blockSize) {\n      keccakState.p1600(this.state)\n      this.count = 0\n    }\n  }\n\n  return output\n}\n\nKeccak.prototype.copy = function (dest) {\n  for (let i = 0; i < 50; ++i) dest.state[i] = this.state[i]\n  dest.blockSize = this.blockSize\n  dest.count = this.count\n  dest.squeezing = this.squeezing\n}\n\nmodule.exports = Keccak\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}